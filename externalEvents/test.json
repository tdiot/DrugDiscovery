{
  "associatedLayout": "Game",
  "lastChangeTimeStamp": 0,
  "name": "Test",
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Level Link Graph",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "BuiltinExternalLayouts::CreateObjectsFromExternalLayout"
              },
              "parameters": [
                "",
                "\"Level\" + GlobalVariableString(level)",
                "0",
                "0"
              ]
            },
            {
              "type": {
                "value": "MettreAutour"
              },
              "parameters": [
                "AimingBubble",
                "Launcher",
                "48",
                "Launcher.Turret::AimingAngle()"
              ]
            },
            {
              "type": {
                "value": "ChangeAnimation"
              },
              "parameters": [
                "AimingBubble",
                "=",
                "RandomInRange(0,4)"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "The bubbles are linked to their neighbors to allow to find aggregation in the \"Board Resolution\" section.\n\n2 instances of the same object can't be linked together so 2 objects are used:\n- BoardBubble, linked to a superposing and hidden LinkBubble\n- LinkBubble, linked to its neighbors BoardBubble\n\nLevelBubble is a group that contains one object for each color because it's easier to design level that way, but it's not used for the gameplay."
            },
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "LevelTumorCell",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "BoardTumorCell",
                    "LevelTumorCell.X()",
                    "LevelTumorCell.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "BoardTumorCell",
                    "Scale",
                    "=",
                    "0.15"
                  ]
                },
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "LinkTumorCell",
                    "LevelTumorCell.X()",
                    "LevelTumorCell.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "LinkTumorCell",
                    "Scale",
                    "=",
                    "0.15"
                  ]
                },
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "LinkTumorCell"
                  ]
                },
                {
                  "type": {
                    "value": "SetAnimationName"
                  },
                  "parameters": [
                    "BoardTumorCell",
                    "LevelTumorCell.AnimationName()"
                  ]
                },
                {
                  "type": {
                    "value": "SetAnimationName"
                  },
                  "parameters": [
                    "LinkTumorCell",
                    "LevelTumorCell.AnimationName()"
                  ]
                },
                {
                  "type": {
                    "value": "Delete"
                  },
                  "parameters": [
                    "LevelTumorCell",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "LinkTumorCell",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Link",
                  "include": {
                    "includeConfig": 0
                  },
                  "target": "CreateNeighborLinks"
                }
              ]
            },
            {
              "disabled": true,
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "LevelNormalCell",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "BoardNormalCell",
                    "LevelNormalCell.X()",
                    "LevelNormalCell.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "BoardNormalCell",
                    "Scale",
                    "=",
                    "0.15"
                  ]
                },
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "LinkNormalCell",
                    "LevelNormalCell.X()",
                    "LevelNormalCell.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "LinkNormalCell",
                    "Scale",
                    "=",
                    "0.15"
                  ]
                },
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "LinkNormalCell"
                  ]
                },
                {
                  "type": {
                    "value": "SetAnimationName"
                  },
                  "parameters": [
                    "BoardNormalCell",
                    "LevelNormalCell.AnimationName()"
                  ]
                },
                {
                  "type": {
                    "value": "SetAnimationName"
                  },
                  "parameters": [
                    "LinkNormalCell",
                    "LevelNormalCell.AnimationName()"
                  ]
                },
                {
                  "type": {
                    "value": "Delete"
                  },
                  "parameters": [
                    "LevelNormalCell",
                    ""
                  ]
                }
              ]
            },
            {
              "disabled": true,
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "LinkNormalCell",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Link",
                  "include": {
                    "includeConfig": 0
                  },
                  "target": "CreateNeighborLinks"
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": []
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "The level may not use every 5 bubble colors."
            },
            {
              "type": "BuiltinCommonInstructions::Link",
              "include": {
                "includeConfig": 0
              },
              "target": "UpdateRemainingColors"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetAnimationName"
                  },
                  "parameters": [
                    "AimingBubble",
                    "VariableString(remainingColors[RandomInRange(0, VariableChildCount(remainingColors) - 1)])"
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "SceneVariableAsBoolean"
          },
          "parameters": [
            "levelCompled",
            ""
          ]
        }
      ],
      "actions": [],
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Controls",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "KeyReleased"
                  },
                  "parameters": [
                    "",
                    "PageDown"
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Link",
                  "include": {
                    "includeConfig": 0
                  },
                  "target": "NextLevel"
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "KeyPressed"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Turret::Turret::MoveCounterClockwise"
                  },
                  "parameters": [
                    "Launcher",
                    "Turret",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "KeyPressed"
                  },
                  "parameters": [
                    "",
                    "Right"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Turret::Turret::MoveClockwise"
                  },
                  "parameters": [
                    "Launcher",
                    "Turret",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Let time for the launcher to point toward the mouse.\nThe 3° margin is because the mouse is followed by simulating key press.\nSo, it won't stop right toward the mouse beause of inertia."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "CursorMovement::CursorStayStill"
                  },
                  "parameters": [
                    "",
                    "1",
                    ""
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "KeyPressed"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "KeyPressed"
                  },
                  "parameters": [
                    "",
                    "Right"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Turret::Turret::MoveToward"
                  },
                  "parameters": [
                    "Launcher",
                    "Turret",
                    "MouseX(\"\", 0)",
                    "MouseY(\"\", 0)",
                    "3",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Turret::Turret::IsMoving"
                  },
                  "parameters": [
                    "Launcher",
                    "Turret",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "AimingBubble",
                    "Launcher",
                    "48",
                    "Launcher.Turret::AimingAngle()"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "FireBullet::FireBullet::CanFire"
                  },
                  "parameters": [
                    "AimingBubble",
                    "FireBullet",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Aim exactly at the mouse.\nIt also allows to aim without hovering, on a touch device for instance."
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Turret::Turret::SetAimingAngleToward"
                      },
                      "parameters": [
                        "Launcher",
                        "Turret",
                        "MouseX(\"\", 0)",
                        "MouseY(\"\", 0)",
                        "3"
                      ]
                    },
                    {
                      "type": {
                        "value": "MettreAutour"
                      },
                      "parameters": [
                        "AimingBubble",
                        "Launcher",
                        "48",
                        "Launcher.Turret::AimingAngle()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "KeyReleased"
                          },
                          "parameters": [
                            "",
                            "LShift"
                          ]
                        },
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "FireBullet::FireBullet::Fire"
                      },
                      "parameters": [
                        "AimingBubble",
                        "FireBullet",
                        "AimingBubble.X()",
                        "AimingBubble.Y()",
                        "MovingBubble",
                        "Launcher.Turret::AimingAngle()",
                        "300",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "MovingBubble",
                        "AimingBubble.AnimationName()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "AimingBubble",
                        "VariableString(remainingColors[RandomInRange(0, VariableChildCount(remainingColors) - 1)])"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "CollisionNP"
                          },
                          "parameters": [
                            "AimingBubble",
                            "BoardTumorCell",
                            "",
                            "",
                            "yes"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Scene"
                          },
                          "parameters": [
                            "",
                            "\"Game\"",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ]
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Moving Bubbles",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "MovingBubble",
                "SideBorder",
                "",
                "",
                "yes"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Bounce::Bounce::BounceOff"
              },
              "parameters": [
                "MovingBubble",
                "Bounce",
                "SideBorder",
                ""
              ]
            },
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "MovingBubble",
                "SideBorder",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "The mustGlue variable avoid to have the BoardBuble from the collision in the context because otherwise it will change color too."
        },
        {
          "disabled": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::And"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "value": "CollisionNP"
                  },
                  "parameters": [
                    "MovingBubble",
                    "BoardNormalCell",
                    "",
                    "",
                    "yes"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::CompareStrings"
                  },
                  "parameters": [
                    "MovingBubble.AnimationName()",
                    "=",
                    "BoardNormalCell.AnimationName()"
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Arreter"
              },
              "parameters": [
                "MovingBubble"
              ]
            },
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "MovingBubble",
                "BoardNormalCell",
                ""
              ]
            },
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "MovingBubble",
                "mustGlue",
                "True"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Avoid to snap bubbles on the column on the scene edge"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PosX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "<",
                    "MovingBubble.Width() / 2 + 2"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "=",
                    "MovingBubble.Width() / 2 + 2"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PosX"
                  },
                  "parameters": [
                    "MovingBubble",
                    ">",
                    "SceneWindowWidth() - (MovingBubble.Width() / 2 + 2)"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "=",
                    "SceneWindowWidth() - (MovingBubble.Width() / 2 + 2)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "HexagonalGrid::SnapObjectToBubbleGrid"
                  },
                  "parameters": [
                    "",
                    "MovingBubble",
                    "32",
                    "32",
                    "16",
                    "16",
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::And"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "value": "CollisionNP"
                  },
                  "parameters": [
                    "MovingBubble",
                    "BoardTumorCell",
                    "",
                    "",
                    "yes"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::CompareStrings"
                  },
                  "parameters": [
                    "MovingBubble.AnimationName()",
                    "=",
                    "BoardTumorCell.AnimationName()"
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Arreter"
              },
              "parameters": [
                "MovingBubble"
              ]
            },
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "MovingBubble",
                "BoardTumorCell",
                ""
              ]
            },
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "MovingBubble",
                "mustGlue",
                "True"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Avoid to snap bubbles on the column on the scene edge"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PosX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "<",
                    "MovingBubble.Width() / 2 + 2"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "=",
                    "MovingBubble.Width() / 2 + 2"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PosX"
                  },
                  "parameters": [
                    "MovingBubble",
                    ">",
                    "SceneWindowWidth() - (MovingBubble.Width() / 2 + 2)"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreX"
                  },
                  "parameters": [
                    "MovingBubble",
                    "=",
                    "SceneWindowWidth() - (MovingBubble.Width() / 2 + 2)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "HexagonalGrid::SnapObjectToBubbleGrid"
                  },
                  "parameters": [
                    "",
                    "MovingBubble",
                    "32",
                    "32",
                    "16",
                    "16",
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "A Mark is linked to the new BoardBubble to know where to look for the board resolution."
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "ObjectVariableAsBoolean"
              },
              "parameters": [
                "MovingBubble",
                "mustGlue",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Create"
              },
              "parameters": [
                "",
                "BoardTumorCell",
                "MovingBubble.X()",
                "MovingBubble.Y()",
                ""
              ]
            },
            {
              "type": {
                "value": "ScalableCapability::ScalableBehavior::SetValue"
              },
              "parameters": [
                "BoardTumorCell",
                "Scale",
                "=",
                "0.15"
              ]
            },
            {
              "type": {
                "value": "Create"
              },
              "parameters": [
                "",
                "LinkTumorCell",
                "MovingBubble.X()",
                "MovingBubble.Y()",
                ""
              ]
            },
            {
              "type": {
                "value": "ScalableCapability::ScalableBehavior::SetValue"
              },
              "parameters": [
                "LinkTumorCell",
                "Scale",
                "=",
                "0.15"
              ]
            },
            {
              "type": {
                "value": "SetAnimationName"
              },
              "parameters": [
                "BoardTumorCell",
                "MovingBubble.AnimationName()"
              ]
            },
            {
              "type": {
                "value": "SetAnimationName"
              },
              "parameters": [
                "LinkTumorCell",
                "MovingBubble.AnimationName()"
              ]
            },
            {
              "type": {
                "value": "Create"
              },
              "parameters": [
                "",
                "Mark",
                "MovingBubble.X()",
                "MovingBubble.Y()",
                ""
              ]
            },
            {
              "type": {
                "value": "Cache"
              },
              "parameters": [
                "LinkTumorCell"
              ]
            },
            {
              "type": {
                "value": "LinkedObjects::LinkObjects"
              },
              "parameters": [
                "",
                "Mark",
                "LinkTumorCell"
              ]
            },
            {
              "type": {
                "value": "ModVarObjetTxt"
              },
              "parameters": [
                "Mark",
                "color",
                "=",
                "MovingBubble.AnimationName()"
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "MovingBubble",
                ""
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Board Resolution",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Link the new bubble to the other bubbles of the board"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "LinkedObjects::PickObjectsLinkedTo"
              },
              "parameters": [
                "",
                "LinkTumorCell",
                "Mark",
                ""
              ]
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Link",
              "include": {
                "includeConfig": 0
              },
              "target": "CreateNeighborLinks"
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::ForEach",
          "object": "Mark",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Match 3 Bubbles",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "The start location of the aggregation search is marked by the Mark.\nIt finds a LinkedBubble aggregation of a given color."
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "AnimationName"
                          },
                          "parameters": [
                            "LinkedTumorCell",
                            "Mark.VariableString(color)"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkTools::CanReach"
                          },
                          "parameters": [
                            "",
                            "LinkedTumorCell",
                            "Mark",
                            "6"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "6, because LikedBubble are BoardBubble + LinkBubble.\nSee the \"Level Link Graph\" section to understand why this is needed."
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "NbObjet"
                              },
                              "parameters": [
                                "LinkedTumorCell",
                                ">=",
                                "6"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "LinkedTumorCell",
                                "mustFell",
                                "True"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Create the FaillingBubbles for the falling animation"
                },
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "BoardTumorCell",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "BoardTumorCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "FallingBubble",
                        "BoardTumorCell.X()",
                        "BoardTumorCell.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "FallingBubble",
                        "BoardTumorCell.AnimationName()"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "FallingBubble",
                        "=",
                        "0.5"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "BoardTumorCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkTumorCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "LinkTumorCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "Mark",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "BoardNormalCell",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "BoardNormalCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "FallingBubble",
                        "BoardNormalCell.X()",
                        "BoardNormalCell.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "FallingBubble",
                        "BoardNormalCell.AnimationName()"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "FallingBubble",
                        "=",
                        "0.5"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "BoardNormalCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkNormalCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "LinkNormalCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "Mark",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Unheld Bubbles",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Now that the targeted bubbles may be removed from the board, there could be bubbles in the air.\nA bubble is in the air if there is no path (from link to link) from the TopBorder to this bubble."
                },
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "LinkedTumorCell",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkedTumorCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkTools::CanReach"
                      },
                      "parameters": [
                        "",
                        "LinkedTumorCell",
                        "TopBorder",
                        "6"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkedTumorCell",
                        "mustFell",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "DebuggerTools::ConsoleLog"
                      },
                      "parameters": [
                        "\"There is a path to the top border for \" + LinkedTumorCell.ObjectName()",
                        "",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Create the FaillingBubbles for the falling animation"
                },
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "BoardTumorCell",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "BoardTumorCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "FallingBubble",
                        "BoardTumorCell.X()",
                        "BoardTumorCell.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "FallingBubble",
                        "BoardTumorCell.AnimationName()"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "BoardTumorCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkTumorCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "LinkTumorCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "LinkedNormalCell",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkedNormalCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkTools::CanReach"
                      },
                      "parameters": [
                        "",
                        "LinkedNormalCell",
                        "TopBorder",
                        "6"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkedNormalCell",
                        "mustFell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "BoardNormalCell",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "BoardNormalCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "FallingBubble",
                        "BoardNormalCell.X()",
                        "BoardNormalCell.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "FallingBubble",
                        "BoardNormalCell.AnimationName()"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "BoardNormalCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "LinkNormalCell",
                        "mustFell",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "LinkNormalCell",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ],
              "parameters": []
            },
            {
              "type": "BuiltinCommonInstructions::Link",
              "include": {
                "includeConfig": 0
              },
              "target": "UpdateRemainingColors"
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Falling Bubble",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Animation of the bubble falling from the board"
        },
        {
          "type": "BuiltinCommonInstructions::ForEach",
          "object": "FallingBubble",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "AddForceAL"
              },
              "parameters": [
                "FallingBubble",
                "90",
                "16",
                "1"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "SceneVariableAsBoolean"
              },
              "parameters": [
                "levelCompleted",
                "True"
              ]
            },
            {
              "type": {
                "value": "NbObjet"
              },
              "parameters": [
                "FallingBubble",
                "=",
                "0"
              ]
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Link",
              "include": {
                "includeConfig": 0
              },
              "target": "NextLevel"
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    }
  ]
}